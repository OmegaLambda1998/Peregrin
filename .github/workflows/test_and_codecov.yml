name: Test and Code Coverage

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: always.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    continue-on-error: ${{ matrix.coverage }}
    strategy:
      fail-fast: true
      matrix:
        # '1.6' is the lowest supported version
        # '1' is the latest stable version
        # 'nightly' is the latest nightly release
        julia-version: ['1.6', '1', 'nightly']
        julia-arch: [x64, x86]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        coverage: [false]
        exclude:
          - os: macOS-latest
            julia-arch: x86
        include:
          - julia-version: '1'
            julia-arch: x64
            os: ubuntu-latest
            coverage: true
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
        if: ${{ matrix.coverage }} 
      - uses: codecov/codecov-action@v4
        with:
          files: lcov.info
        if: ${{ matrix.coverage }} 
      - uses: julia-actions/julia-uploadcoveralls@v1
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        if: ${{ matrix.coverage }} 
